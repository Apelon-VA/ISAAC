//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.30 at 06:15:10 PM PDT 
//


package org.hl7.knowledgeartifact.r1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.hl7.cdsdt.r2.ST;


/**
 * An action that is not further broken down into
 * 				constituent actions.
 * 			
 * 
 * <p>Java class for AtomicAction complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AtomicAction">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:hl7-org:knowledgeartifact:r1}ActionBase">
 *       &lt;sequence>
 *         &lt;element name="textEquivalent" type="{urn:hl7-org:cdsdt:r2}ST" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AtomicAction", propOrder = {
    "textEquivalent"
})
@XmlSeeAlso({
    DeclareResponseAction.class,
    CollectInformationAction.class,
    FireEventAction.class,
    UpdateAction.class,
    RemoveAction.class,
    CreateAction.class
})
public abstract class AtomicAction
    extends ActionBase
{

    protected ST textEquivalent;

    /**
     * Gets the value of the textEquivalent property.
     * 
     * @return
     *     possible object is
     *     {@link ST }
     *     
     */
    public ST getTextEquivalent() {
        return textEquivalent;
    }

    /**
     * Sets the value of the textEquivalent property.
     * 
     * @param value
     *     allowed object is
     *     {@link ST }
     *     
     */
    public void setTextEquivalent(ST value) {
        this.textEquivalent = value;
    }

}
