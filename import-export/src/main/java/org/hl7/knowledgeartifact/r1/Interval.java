//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.26 at 04:34:23 PM PDT 
//

package org.hl7.knowledgeartifact.r1;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

/**
 * The Interval selector defines an interval value. An interval must be defined
 * using a point type that supports comparison, as well as Successor and
 * Predecessor operations, and Minimum and Maximum Value operations.
 * 
 * The beginning and ending of the interval may each be defined as open or
 * closed. Following standard terminology usage in interval mathematics, an open
 * interval is defined to exclude the specified point, whereas a closed interval
 * includes the point. The default is closed, indicating an inclusive interval.
 * 
 * The begin and end elements are both optional. If the begin element is not
 * specified, the beginning point of the resulting interval is null. If the end
 * element is not specified, the ending point of the resulting interval is null.
 * 
 * The static type of the Begin argument determines the type of the interval,
 * and the End argument must be of the same type.
 * 
 * If the beginning point of the interval is null and the beginning of the
 * interval is open, the beginning boundary of the interval is interpreted as
 * unknown, and computations involving the beginning boundary will result in
 * null.
 * 
 * If the beginning point of the interval is null and the beginning of the
 * interval is closed, the interval is interpreted to begin at the start of the
 * range of the point type, and computations involving the beginning point will
 * be performed with that interpretation.
 * 
 * If the ending point of the interval is null and the ending of the interval is
 * open, the ending boundary of the interval is unknown, and computations
 * involving the ending point will result in null.
 * 
 * If the ending point of the interval is null and the ending of the interval is
 * closed, the interval is interpreted to end at the end of the range of the
 * point type, and computations involving the ending point will be performed
 * with that interpretation.
 * 
 * <p>
 * Java class for Interval complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="Interval">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:hl7-org:knowledgeartifact:r1}Expression">
 *       &lt;sequence>
 *         &lt;element name="begin" type="{urn:hl7-org:knowledgeartifact:r1}Expression" minOccurs="0"/>
 *         &lt;element name="end" type="{urn:hl7-org:knowledgeartifact:r1}Expression" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="beginOpen" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="endOpen" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Interval", propOrder = {
    "begin", "end"
})
public class Interval extends Expression {

  protected Expression begin;

  protected Expression end;

  @XmlAttribute(name = "beginOpen")
  protected Boolean beginOpen;

  @XmlAttribute(name = "endOpen")
  protected Boolean endOpen;

  /**
   * Gets the value of the begin property.
   * 
   * @return possible object is {@link Expression }
   * 
   */
  public Expression getBegin() {
    return begin;
  }

  /**
   * Sets the value of the begin property.
   * 
   * @param value allowed object is {@link Expression }
   * 
   */
  public void setBegin(Expression value) {
    this.begin = value;
  }

  /**
   * Gets the value of the end property.
   * 
   * @return possible object is {@link Expression }
   * 
   */
  public Expression getEnd() {
    return end;
  }

  /**
   * Sets the value of the end property.
   * 
   * @param value allowed object is {@link Expression }
   * 
   */
  public void setEnd(Expression value) {
    this.end = value;
  }

  /**
   * Gets the value of the beginOpen property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public boolean isBeginOpen() {
    if (beginOpen == null) {
      return false;
    } else {
      return beginOpen;
    }
  }

  /**
   * Sets the value of the beginOpen property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setBeginOpen(Boolean value) {
    this.beginOpen = value;
  }

  /**
   * Gets the value of the endOpen property.
   * 
   * @return possible object is {@link Boolean }
   * 
   */
  public boolean isEndOpen() {
    if (endOpen == null) {
      return false;
    } else {
      return endOpen;
    }
  }

  /**
   * Sets the value of the endOpen property.
   * 
   * @param value allowed object is {@link Boolean }
   * 
   */
  public void setEndOpen(Boolean value) {
    this.endOpen = value;
  }

}
