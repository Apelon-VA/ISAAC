//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.30 at 06:15:10 PM PDT 
//


package org.hl7.knowledgeartifact.r1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ValueType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ValueType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Boolean"/>
 *     &lt;enumeration value="Code"/>
 *     &lt;enumeration value="CodedOrdinal"/>
 *     &lt;enumeration value="EntityName"/>
 *     &lt;enumeration value="Identifier"/>
 *     &lt;enumeration value="Integer"/>
 *     &lt;enumeration value="IntegerInterval"/>
 *     &lt;enumeration value="Period"/>
 *     &lt;enumeration value="PhysicalQuantity"/>
 *     &lt;enumeration value="PhysicalQuantityInterval"/>
 *     &lt;enumeration value="QuantityInterval"/>
 *     &lt;enumeration value="Ratio"/>
 *     &lt;enumeration value="Real"/>
 *     &lt;enumeration value="RealInterval"/>
 *     &lt;enumeration value="SimpleCode"/>
 *     &lt;enumeration value="String"/>
 *     &lt;enumeration value="Timestamp"/>
 *     &lt;enumeration value="TimestampInterval"/>
 *     &lt;enumeration value="URL"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "ValueType")
@XmlEnum
public enum ValueType {

    @XmlEnumValue("Boolean")
    BOOLEAN("Boolean"),
    @XmlEnumValue("Code")
    CODE("Code"),
    @XmlEnumValue("CodedOrdinal")
    CODED_ORDINAL("CodedOrdinal"),
    @XmlEnumValue("EntityName")
    ENTITY_NAME("EntityName"),
    @XmlEnumValue("Identifier")
    IDENTIFIER("Identifier"),
    @XmlEnumValue("Integer")
    INTEGER("Integer"),
    @XmlEnumValue("IntegerInterval")
    INTEGER_INTERVAL("IntegerInterval"),
    @XmlEnumValue("Period")
    PERIOD("Period"),
    @XmlEnumValue("PhysicalQuantity")
    PHYSICAL_QUANTITY("PhysicalQuantity"),
    @XmlEnumValue("PhysicalQuantityInterval")
    PHYSICAL_QUANTITY_INTERVAL("PhysicalQuantityInterval"),
    @XmlEnumValue("QuantityInterval")
    QUANTITY_INTERVAL("QuantityInterval"),
    @XmlEnumValue("Ratio")
    RATIO("Ratio"),
    @XmlEnumValue("Real")
    REAL("Real"),
    @XmlEnumValue("RealInterval")
    REAL_INTERVAL("RealInterval"),
    @XmlEnumValue("SimpleCode")
    SIMPLE_CODE("SimpleCode"),
    @XmlEnumValue("String")
    STRING("String"),
    @XmlEnumValue("Timestamp")
    TIMESTAMP("Timestamp"),
    @XmlEnumValue("TimestampInterval")
    TIMESTAMP_INTERVAL("TimestampInterval"),
    URL("URL");
    private final String value;

    ValueType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ValueType fromValue(String v) {
        for (ValueType c: ValueType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
